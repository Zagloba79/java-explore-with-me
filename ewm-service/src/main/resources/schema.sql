DROP TABLE IF EXISTS requests, users, items, bookings, comments;

CREATE TABLE IF NOT EXISTS users (
  id BIGSERIAL NOT NULL,
  name VARCHAR(255) NOT NULL,
  email VARCHAR(512) NOT NULL,
  CONSTRAINT PK_USER PRIMARY KEY (id),
  CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS categories (
  id BIGSERIAL NOT NULL,
  name VARCHAR(255) NOT NULL,
  CONSTRAINT PK_CATEGORY PRIMARY KEY (id),
  CONSTRAINT UQ_CATEGORY_NAME UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS locations (
  id BIGSERIAL NOT NULL,
  lat FLOAT NOT NULL,
  lon FLOAT NOT NULL,
  CONSTRAINT PK_LOCATION PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS events (
  id BIGSERIAL NOT NULL,
  annotation VARCHAR(512),
  category_id BIGINT,
  description VARCHAR(1000),
  event_date VARCHAR(255),
  location_id BIGINT,
  created_on TIMESTAMP WITHOUT TIME ZONE NOT NULL,
  initiator_id BIGINT,
  paid boolean,
  participant_limit BIGINT,
  published_on TIMESTAMP WITHOUT TIME ZONE NOT NULL,
  request_moderation boolean,
  title VARCHAR(512),
  state VARCHAR(255),
  CONSTRAINT PK_EVENT PRIMARY KEY (id),
  CONSTRAINT EVENTS_CATEGORIES_ID_FK FOREIGN KEY (category_id) REFERENCES categories (ID) ON DELETE CASCADE,
  CONSTRAINT EVENTS_LOCATIONS_ID_FK FOREIGN KEY (location_id) REFERENCES locations (ID) ON DELETE CASCADE,
  CONSTRAINT EVENTS_USERS_ID_FK FOREIGN KEY (initiator_id) REFERENCES users (ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS requests (
  id BIGSERIAL NOT NULL,
  created TIMESTAMP WITHOUT TIME ZONE NOT NULL,
  event_id BIGINT NOT NULL,
  requester_id BIGINT NOT NULL,
  status VARCHAR(255) NOT NULL,
  CONSTRAINT PK_LOCATION PRIMARY KEY (id),
  CONSTRAINT REQUESTS_EVENTS_ID_FK FOREIGN KEY (event_id) REFERENCES events (ID) ON DELETE CASCADE,
  CONSTRAINT REQUESTS_USERS_ID_FK FOREIGN KEY (requester_id) REFERENCES users (ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS compilations (
  id BIGSERIAL NOT NULL,
  created TIMESTAMP WITHOUT TIME ZONE NOT NULL,
  event_id BIGINT NOT NULL,
  requester_id BIGINT NOT NULL,
  status VARCHAR(255) NOT NULL,
  CONSTRAINT PK_LOCATION PRIMARY KEY (id),
  CONSTRAINT REQUESTS_EVENTS_ID_FK FOREIGN KEY (event_id) REFERENCES events (ID) ON DELETE CASCADE,
  CONSTRAINT REQUESTS_USERS_ID_FK FOREIGN KEY (requester_id) REFERENCES users (ID) ON DELETE CASCADE
);